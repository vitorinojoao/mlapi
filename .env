## --------------------------------------------------
## General Configuration
## --------------------------------------------------
## Name of the Flask Application
FLASK_APP=MLAPI
## --------------------
## True to enable Cross-Origin Resource Sharing
CORS_ENABLED=True
## Origins from where to allow access
CORS_ORIGINS=localhost
## --------------------
## Standard logging levels: 0 Disabled, 10 Debug, 20 Info, 30 Warning, 40 Error, 50 Critical
LOGGING_LEVEL=10
## Filepath where to append log entries
LOGGING_FILEPATH=./files/log.txt
## --------------------------------------------------
## AUTH Configuration
## --------------------------------------------------
## True to enable the JWT Authorization Scheme
AUTH_ENABLED=True
## Route "/auth/"
AUTH_ROUTE=auth
## --------------------
## List of client credentials which can be given signed tokens
## After an initial "/auth/reset/", the clients must renew their access through "/auth/refresh/"
AUTH_CLIENTS_RESET_USN=ClientA, ClientB
AUTH_CLIENTS_RESET_PWD=YouShouldReplaceTheseCredentials, YouShouldAlsoReplaceThese
## True to ensure that the clients can only do "/auth/reset/" once, and then only use tokens
## False to allow them to forever repeat their "/auth/reset/" with the same credentials
AUTH_CLIENTS_RESET_ONLY_ONCE=True
## --------------------
## Authorization issuer
AUTH_ISSUER=MLAPIAS
## Algorithm for the RSA signatures
AUTH_ALGORITHM=RS512
## Time to live of signed access tokens, in minutes
AUTH_ACCESS_TTL_MINS=60
## Time to live of signed refresh tokens, in minutes
AUTH_REFRESH_TTL_MINS=1440
## --------------------
## Filepath where to save public key PEM file
AUTH_PUBLIC_KEY_SAVE_FILEPATH=./files/auth_public_key.pem
## Filepath where to save private key PEM file
AUTH_PRIVATE_KEY_SAVE_FILEPATH=./files/auth_private_key.pem
## Secret string to encrypt private key PEM file
AUTH_PRIVATE_KEY_SAVE_SECRET=YouShouldReplaceThisString
## --------------------------------------------------
## API Configuration
## --------------------------------------------------
## True to enable the Application Programming Interface
API_ENABLED=True
## Route "/api/"
API_ROUTE=api
## --------------------
## Filepath from where to load the ML model
API_MODEL_FILEPATH=./resources/classification_model.joblib
## --------------------
## Filepath from where to load the categorical feature encodings
API_CATEGORICAL_ENCODING_FILEPATH=./resources/categorical_feature_encoding.csv
## --------------------
## True to enable the conversion of predictions from confidence scores
## to the label of the class with the highest score
API_CONVERT_CLASS_SCORES=True
## True to enable the conversion of predictions from anomaly scores
## to inliers/outliers from 1/-1 format to 0/1 format
API_CONVERT_ANOMALY_SCORES=False
## --------------------------------------------------
